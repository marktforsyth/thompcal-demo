from json import load


def only_birthdays(event):
    return "&" not in event["subject"]


def subject(event):
    return event["subject"]


def fetch_names():
    with open("../thompcal/data/events.json", "r") as events:
        birthdays = filter(only_birthdays, load(events))
        people = list(map(subject, birthdays))

        return people


def format_import(name):
    return f"import {name.lower()}Url from \"../../images/{name}.jpg\";"


def format_hash_item(name):
    return f"\"{name}\": {name.lower()}Url"


def main():
    generated = "// Generated by img_urls.py in ~/tidbits\n\n"

    names = fetch_names()
    imports = map(format_import, names)
    imports_string = "\n".join(imports)

    dec_type = "\n\ntype Images = {\n  [person: string]: string;\n};\n\n"
    var_dec = "const images: Images = "

    hash_map = map(format_hash_item, names)
    hash_string = "{\n  " + ",\n  ".join(hash_map) + "\n};"

    export = "\n\nexport default images;"
    
    final = (
        f"{generated}{imports_string}"
        f"{dec_type}{var_dec}{hash_string}{export}"
    )

    with open(
        "../thompcal/src/shared-logic/images.ts",
        "w",
        encoding="utf-8",
    ) as out:
        out.write(final)
    


if __name__ == "__main__":
    main()
